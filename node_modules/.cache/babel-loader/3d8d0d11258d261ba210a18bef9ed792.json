{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/tic-tac-toe-thomas-chantelle/src/App.js\";\nimport React, { Component } from 'react';\nimport Square from './components/Square';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = click => {\n      if (this.state.squares[click] === \"\") {\n        //changes inside the box to the player's mark\n        this.setState({\n          squares: this.state.squares.map((value, index) => {\n            if (click === index) {\n              return this.state.player;\n            } else {\n              return value;\n            }\n          })\n        }); //changes the player\n\n        if (this.state.player === \"X\") {\n          this.setState({\n            player: \"O\"\n          });\n        } else this.setState({\n          player: \"X\"\n        });\n      }\n    };\n\n    this.checkWinner = () => {\n      //destructures all the indexes of the grid\n      var zero = this.state.squares[0];\n      var one = this.state.squares[1];\n      var two = this.state.squares[2];\n      var three = this.state.squares[3];\n      var four = this.state.squares[4];\n      var five = this.state.squares[5];\n      var six = this.state.squares[6];\n      var seven = this.state.squares[7];\n      var eight = this.state.squares[8]; //creating our winning scenarios\n      //3 columns\n\n      if (zero === three && zero === six && zero !== \"\") {\n        alert(\"\".concat(this.state.player, \" has won!\"));\n      } else if (one === four && one === seven && one !== \"\") {\n        alert(\"\".concat(this.state.player, \" has won!\"));\n      } else if (two === five && two === eight && two !== \"\") {\n        alert(\"\".concat(this.state.player, \" has won!\")); //3 rows\n      } else if (zero === one && zero === two && zero !== \"\") {\n        alert(\"\".concat(this.state.player, \" has won!\"));\n      } else if (three === four && three === five && three !== \"\") {\n        alert(\"\".concat(this.state.player, \" has won!\"));\n      } else if (six === seven && six === eight && six !== \"\") {\n        alert(\"\".concat(this.state.player, \" has won!\")); //2 diagonal\n      } else if (zero === four && zero === eight && zero !== \"\") {\n        alert(\"\".concat(this.state.player, \" has won!\"));\n      } else if (two === four && two === six && two !== \"\") {\n        alert(\"\".concat(this.state.player, \" has won!\"));\n      }\n    };\n\n    this.state = {\n      squares: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      player: \"X\"\n    };\n  }\n\n  render() {\n    let square = this.state.squares.map((value, index) => {\n      return React.createElement(Square, {\n        value: value,\n        index: index,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.checkWinner, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Tic Tac Toe\"), React.createElement(\"div\", {\n      id: \"holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, square)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/tic-tac-toe-thomas-chantelle/src/App.js"],"names":["React","Component","Square","App","constructor","props","handleChange","click","state","squares","setState","map","value","index","player","checkWinner","zero","one","two","three","four","five","six","seven","eight","alert","render","square"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Square from './components/Square'\nimport './App.css'\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      squares: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      player: \"X\"\n    }\n  }\n\n  handleChange = (click) =>  {\n    if (this.state.squares[click] === \"\") {\n      //changes inside the box to the player's mark\n      this.setState({ squares: this.state.squares.map((value,index) => {\n        if (click === index) {\n          return this.state.player\n        } else {\n          return value;\n        }\n      })})\n      \n      //changes the player\n      if (this.state.player === \"X\")  {\n        this.setState({ player: \"O\"})\n      } else this.setState({ player: \"X\"})\n    }\n  }\n  checkWinner = () => {\n    //destructures all the indexes of the grid\n    var zero = this.state.squares[0]\n    var one = this.state.squares[1]\n    var two = this.state.squares[2]\n    var three = this.state.squares[3]\n    var four = this.state.squares[4]\n    var five = this.state.squares[5]\n    var six = this.state.squares[6]\n    var seven = this.state.squares[7]\n    var eight = this.state.squares[8]\n    \n    //creating our winning scenarios\n    //3 columns\n    if (zero === three && zero === six && zero !== \"\"){\n      alert (`${this.state.player} has won!`)\n    } else if (one === four && one === seven && one !== \"\"){\n      alert (`${this.state.player} has won!`)\n    } else if (two === five && two === eight && two !== \"\"){\n      alert (`${this.state.player} has won!`)\n    //3 rows\n    } else if (zero === one && zero === two && zero !== \"\"){\n      alert (`${this.state.player} has won!`)\n    } else if (three === four && three === five && three !== \"\"){\n      alert (`${this.state.player} has won!`)\n    } else if (six === seven && six === eight && six !== \"\"){\n      alert (`${this.state.player} has won!`)\n    //2 diagonal\n    } else if (zero === four && zero === eight && zero !== \"\"){\n      alert (`${this.state.player} has won!`)\n    } else if (two === four && two === six && two !== \"\"){\n      alert (`${this.state.player} has won!`)\n    }\n  }\n\n  render(){\n    let square = this.state.squares.map((value, index)=> {\n      return (\n        <Square\n        value = { value }\n        index = { index }\n        handleChange = { this.handleChange }\n        />\n      )\n    })\n\n    return(\n      <React.Fragment>\n        {this.checkWinner}\n        <h1>Tic Tac Toe</h1>\n        <div id=\"holder\">\n          <div id=\"grid\">\n            { square }\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}